<?xml version="1.0"?>

<project name="web-admin" basedir="." default="all">

  <property name="name" value="web-admin" />
  <property name="display.name" value="Voldemort" />
  <property name="author" value="Praveen Bathala" />
  
  <property name="lib.dir" value="lib" />
  <property name="dist.dir" value="dist" />
  <property name="classes.dir" value="dist/classes" />
  <property name="src.dir" value="src" />
  <property name="main.dir" value="${src.dir}/main" />
  <property name="java.dir" value="${main.dir}/java" />
  <property name="conf.dir" value="${src.dir}/main/conf" />
  <property name="webapp.dir" value="src/main/webapp" />
  <property name="webappresources.dir" value="src/main/webapp/resources" />

  <path id="main-classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <pathelement path="${classes.dir}" />
  </path>

  <target name="all" depends="clean, jar, war, srcjar" description="Build all artifacts." />

  <target name="clean" description="Delete generated files.">
    <delete dir="${dist.dir}" />
  </target>

  <target name="build" description="Compile main source tree java files">
    <!-- copy non-java files to classes dir to load from classpath -->
    <copy todir="${classes.dir}">
      <fileset dir="${java.dir}">
        <exclude name="**/*.java" />
        <exclude name="**/*.html" />
        <exclude name="**/log4j.properties" />
      </fileset>
    </copy>
    <!-- place to put log4j.properties -->
    <copy file="${src.dir}/main/conf/log4j.xml" todir="${conf.dir}" />
    <javac destdir="${classes.dir}" target="1.5" debug="true" deprecation="false" failonerror="true" includeantruntime="false">
      <src path="${java.dir}" />
      <classpath refid="main-classpath" />
    </javac>
  </target>

  <target name="jar" depends="build" description="Build server jar file">
    <jar destfile="${dist.dir}/${name}.jar">
      <fileset dir="${classes.dir}">
        <include name="**/*.*" />
      </fileset>
      <!-- include xsds -->
      <fileset dir="${java.dir}">
        <include name="**/*.xsd" />
      </fileset>
    </jar>
  </target>

  <target name="srcjar" description="Build source jar file">
    <mkdir dir="${dist.dir}" />
    <jar destfile="${dist.dir}/${name}-src.jar">
      <fileset dir="${java.dir}">
        <include name="**/*.java" />
      </fileset>
    </jar>
  </target>

  <target name="alljar" depends="build" description="Build a jar file that includes all contrib code.">
    <jar destfile="${dist.dir}/${name}-all.jar">
      <fileset dir="${classes.dir}">
        <include name="**/*.*" />
      </fileset>
      <!-- include xsds -->
      <fileset dir="${java.dir}">
        <include name="**/*.xsd" />
      </fileset>
    </jar>
  </target>

  <target name="war" depends="build" description="Build server war file">
    <war destfile="${dist.dir}/${name}.war" webxml="${webapp.dir}/WEB-INF/web.xml" basedir="${classes.dir}">
      <classes dir="${classes.dir}"/>
      <lib dir="${lib.dir}">
        <exclude name="${lib.dir}/servlet-api*.jar"/>
        <exclude name="${lib.dir}/src/**"/>
      </lib>
      <fileset dir="${webapp.dir}"> 
      	<include name="**/*" /> 
      </fileset>
      <fileset dir="${main.dir}" includes="conf" /> 
    </war>
  </target>

  <macrodef name="create-release-artifacts">
    <attribute name="version" />
    <sequential>
    <antcall target="all"/>
    <zip destfile="${dist.dir}/${name}-@{version}.zip">
      <zipfileset dir="." prefix="voldemort-@{version}" filemode="755" includes="bin/*"/>
      <zipfileset dir="." prefix="voldemort-@{version}" includes="**">
        <exclude name="${dist.dir}/*classes"/>
        <exclude name="bin/*"/>
        <exclude name=".git*/**"/>
      </zipfileset>
    </zip>
    <tar destfile="${dist.dir}/${name}-@{version}.tar.gz" compression="gzip" longfile="gnu">
      <tarfileset dir="." prefix="voldemort-@{version}" filemode="755" includes="bin/*"/>
      <tarfileset dir="." prefix="voldemort-@{version}" includes="**">
        <exclude name="${dist.dir}/*classes"/>
        <exclude name="${dist.dir}/*.zip"/>
        <exclude name="bin/*"/>
        <exclude name=".git*/**"/>
      </tarfileset>
    </tar>
    </sequential>
  </macrodef>

  <target name="snapshot"  description="Create a release-snapshot zip file with everything pre-built.">
    <create-release-artifacts version="${curr.release.snapshot}" />
  </target>

  <target name="release" description="Create a release zip file with everything pre-built.">
    <create-release-artifacts version="${curr.release}" />
  </target>
  <macrodef name="make-javadocs">
    <attribute name="dir" />
    <attribute name="packagenames" />
    <attribute name="javadir" />
    <sequential>
      <replace-dir dir="@{dir}" />
      <javadoc sourcepath="@{javadir}" destdir="@{dir}" windowtitle="${display.name}" source="1.5" author="true" version="true" use="true" packagenames="@{packagenames}">
        <doctitle>${display.name}</doctitle>
        <bottom>${author}</bottom>
        <classpath refid="main-classpath" />
      </javadoc>
    </sequential>
  </macrodef>

  <target name="docs" description="Create complete Javadoc documentation">
    <make-javadocs dir="${javadoc.dir}/all" packagenames="*" javadir="${java.dir}"/>
    <make-javadocs dir="${javadoc.dir}/client" packagenames="voldemort.versioning.*, voldemort.client.*,voldemort.serialization.*" javadir="${java.dir}"/>
  </target>

</project>
